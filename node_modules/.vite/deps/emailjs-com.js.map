{
  "version": 3,
  "sources": ["../../emailjs-com/es/store/store.js", "../../emailjs-com/es/methods/init/init.js", "../../emailjs-com/es/utils/validateParams.js", "../../emailjs-com/es/models/EmailJSResponseStatus.js", "../../emailjs-com/es/api/sendPost.js", "../../emailjs-com/es/methods/send/send.js", "../../emailjs-com/es/methods/sendForm/sendForm.js", "../../emailjs-com/es/index.js"],
  "sourcesContent": ["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n", "import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n", "export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n", "export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n", "import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n", "import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n", "import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n", "import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n"],
  "mappings": ";;;AAAO,IAAM,QAAQ;AAAA,EACjB,SAAS;AACb;;;ACIO,IAAM,OAAO,CAAC,QAAQ,SAAS,8BAA8B;AAChE,QAAM,UAAU;AAChB,QAAM,UAAU;AACpB;;;ACTO,IAAM,iBAAiB,CAAC,QAAQ,WAAW,eAAe;AAC7D,MAAI,CAAC,QAAQ;AACT,UAAM;AAAA,EACV;AACA,MAAI,CAAC,WAAW;AACZ,UAAM;AAAA,EACV;AACA,MAAI,CAAC,YAAY;AACb,UAAM;AAAA,EACV;AACA,SAAO;AACX;;;ACXO,IAAM,wBAAN,MAA4B;AAAA,EAC/B,YAAY,cAAc;AACtB,SAAK,SAAS,aAAa;AAC3B,SAAK,OAAO,aAAa;AAAA,EAC7B;AACJ;;;ACHO,IAAM,WAAW,CAAC,KAAK,MAAM,UAAU,CAAC,MAAM;AACjD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,UAAM,MAAM,IAAI,eAAe;AAC/B,QAAI,iBAAiB,QAAQ,CAAC,EAAE,OAAO,MAAM;AACzC,YAAM,iBAAiB,IAAI,sBAAsB,MAAM;AACvD,UAAI,eAAe,WAAW,OAAO,eAAe,SAAS,MAAM;AAC/D,gBAAQ,cAAc;AAAA,MAC1B,OACK;AACD,eAAO,cAAc;AAAA,MACzB;AAAA,IACJ,CAAC;AACD,QAAI,iBAAiB,SAAS,CAAC,EAAE,OAAO,MAAM;AAC1C,aAAO,IAAI,sBAAsB,MAAM,CAAC;AAAA,IAC5C,CAAC;AACD,QAAI,KAAK,QAAQ,MAAM,UAAU,KAAK,IAAI;AAC1C,WAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,QAAQ;AAClC,UAAI,iBAAiB,KAAK,QAAQ,GAAG,CAAC;AAAA,IAC1C,CAAC;AACD,QAAI,KAAK,IAAI;AAAA,EACjB,CAAC;AACL;;;ACZO,IAAM,OAAO,CAAC,WAAW,YAAY,eAAe,WAAW;AAClE,QAAM,MAAM,UAAU,MAAM;AAC5B,iBAAe,KAAK,WAAW,UAAU;AACzC,QAAM,SAAS;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,iBAAiB;AAAA,EACrB;AACA,SAAO,SAAS,wBAAwB,KAAK,UAAU,MAAM,GAAG;AAAA,IAC5D,gBAAgB;AAAA,EACpB,CAAC;AACL;;;ACrBA,IAAM,eAAe,CAAC,SAAS;AAC3B,MAAI;AACJ,MAAI,OAAO,SAAS,UAAU;AAC1B,kBAAc,SAAS,cAAc,IAAI;AAAA,EAC7C,OACK;AACD,kBAAc;AAAA,EAClB;AACA,MAAI,CAAC,eAAe,YAAY,aAAa,QAAQ;AACjD,UAAM;AAAA,EACV;AACA,SAAO;AACX;AASO,IAAM,WAAW,CAAC,WAAW,YAAY,MAAM,WAAW;AAC7D,QAAM,MAAM,UAAU,MAAM;AAC5B,QAAM,cAAc,aAAa,IAAI;AACrC,iBAAe,KAAK,WAAW,UAAU;AACzC,QAAM,WAAW,IAAI,SAAS,WAAW;AACzC,WAAS,OAAO,eAAe,OAAO;AACtC,WAAS,OAAO,cAAc,SAAS;AACvC,WAAS,OAAO,eAAe,UAAU;AACzC,WAAS,OAAO,WAAW,GAAG;AAC9B,SAAO,SAAS,6BAA6B,QAAQ;AACzD;;;AC9BA,IAAO,aAAQ;AAAA,EACX;AAAA,EACA;AAAA,EACA;AACJ;",
  "names": []
}
